{"version":3,"file":"static/js/297.683217e5.chunk.js","mappings":"8QAEaA,EAAaC,EAAAA,GAAAA,KAAH,gLAUVC,EAAcD,EAAAA,GAAAA,MAAH,qFAMXE,EAAeF,EAAAA,GAAAA,OAAH,mR,SCfZG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,0BACE,UAACR,EAAD,CAAYK,SAVK,SAAAI,GACnBA,EAAMC,iBAENL,EAASE,GAETC,EAAS,GACV,EAIG,WACE,SAACN,EAAD,CACES,SAfkB,SAAAF,GACxBD,EAASC,EAAMG,cAAcC,MAC9B,EAcOC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAACd,EAAD,CAAcW,KAAK,SAAnB,wBAIP,E,kBCeD,EAxCe,WAAO,IAAD,EACnB,GAAoCR,EAAAA,EAAAA,UAAS,IAA7C,eAAOY,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,IAG7CC,EAAAA,EAAAA,YAAU,WAAM,wCAMd,gHAE8BC,EAAAA,EAAAA,IAAmBH,GAFjD,gBAEYI,EAFZ,EAEYA,QACRR,GAAc,OAAIQ,IAHtB,gDAKIC,QAAQC,IAAI,KAAMC,SALtB,0DANc,sBACTP,IAGLJ,EAAc,IAJA,mCAcdY,GACD,GAAE,CAACR,IAUJ,OACE,+BACE,4BACE,SAACnB,EAAD,CAAWC,SAXS,SAAAE,GAIxBe,EAAgB,CAAEC,OAAQhB,IAC1BY,EAAc,GACf,IAMMD,IAAc,SAACc,EAAA,EAAD,CAAWC,OAAQf,QAIzC,C","sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 40px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  width: 100%;\n`;\n\nexport const SearchInput = styled.input`\n  min-width: 400px;\n  min-height: 40px;\n  padding: 0 5px;\n`;\n\nexport const SearchButton = styled.button`\n  margin-left: 20px;\n  padding: 5px 15px;\n  background-color: rgb(206, 206, 197);\n  border-radius: 3px;\n  border: rgb(206, 206, 197);\n  cursor: pointer;\n  height: 40px;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(172, 171, 165);\n  }\n`;\n","import React, { useState } from 'react';\nimport { SearchForm, SearchInput, SearchButton } from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.currentTarget.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(query);\n\n    setQuery('');\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput\n          onChange={handleInputChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </SearchForm>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { fetchMoviesByQuery } from 'APIService/API';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search') ?? '';\n  // const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    setMoviesList([]);\n\n    async function addMoviesListByQuery() {\n      try {\n        const { results } = await fetchMoviesByQuery(search);\n        setMoviesList([...results]);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    addMoviesListByQuery();\n  }, [search]);\n\n  const formSubmitHandler = query => {\n    // setQuery(query);\n    // console.log(query);\n    // console.log(search);\n    setSearchParams({ search: query });\n    setMoviesList([]);\n  };\n\n  return (\n    <>\n      <div>\n        <Searchbar onSubmit={formSubmitHandler} />\n        {moviesList && <MovieList movies={moviesList} />}\n      </div>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["SearchForm","styled","SearchInput","SearchButton","Searchbar","onSubmit","useState","query","setQuery","event","preventDefault","onChange","currentTarget","value","type","autoComplete","autoFocus","placeholder","moviesList","setMoviesList","useSearchParams","searchParams","setSearchParams","search","get","useEffect","fetchMoviesByQuery","results","console","log","message","addMoviesListByQuery","MovieList","movies"],"sourceRoot":""}