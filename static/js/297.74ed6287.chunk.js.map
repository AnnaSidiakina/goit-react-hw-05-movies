{"version":3,"file":"static/js/297.74ed6287.chunk.js","mappings":"uRAEaA,EAAaC,EAAAA,GAAAA,KAAH,gLAUVC,EAAcD,EAAAA,GAAAA,MAAH,qFAMXE,EAAeF,EAAAA,GAAAA,OAAH,mR,SCdZG,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpC,OACE,0BACE,UAACN,EAAD,CAAYK,SAAUA,EAAtB,WACE,SAACH,EAAD,CACEK,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,aAAcN,KAEhB,SAACH,EAAD,CAAcK,KAAK,SAAnB,wBAIP,E,oCCyDD,EApEe,WAAO,IAAD,IACnB,GAAoCK,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAA0BP,EAAAA,EAAAA,WAAS,GAAnC,eAAOQ,EAAP,KAAcC,EAAd,KACA,GAA0BT,EAAAA,EAAAA,UAAS,GAAnC,eAAOU,EAAP,KAAcC,EAAd,KACMC,EAAOC,OAAM,UAACT,EAAaG,IAAI,eAAlB,QAA6B,IAEhDO,EAAAA,EAAAA,YAAU,WAAM,wCAMd,8GAEuBC,EAAAA,EAAAA,IAAmBT,EAAOM,GAFjD,OAEUI,EAFV,OAGQJ,EAAO,GACTV,GAAc,SAAAe,GAAc,wBAAQA,IAAR,OAA2BD,EAAKE,SAAhC,IAE9BhB,GAAc,OAAIc,EAAKE,UACvBP,EAASQ,KAAKC,MAAMJ,EAAKK,cAAgB,KACzChB,EAAgB,CAAEC,MAAOA,EAAOM,KAAMA,IAEV,IAAxBI,EAAKE,QAAQI,QACfb,GAAS,GAXf,kDAcIc,QAAQC,IAAI,KAAMC,SAdtB,2DANc,sBACA,KAAVnB,GADU,mCAuBdoB,EACD,GAAE,CAACpB,EAAOM,EAAMP,IAkBjB,OACE,+BACE,4BACE,SAACd,EAAD,CAAWC,SAnBS,SAAAmC,GACxBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,cAAcC,SAASzB,MAAMb,MAC/B,KAAfoC,GACFG,EAAAA,EAAAA,MAAY,8BAGd3B,EAA+B,KAAfwB,EAAoB,CAAEvB,MAAOuB,EAAYjB,KAAMA,GAAS,IACxEV,EAAc,GACf,EAU6CT,MAAOa,IAC9CL,IAAc,SAACgC,EAAA,EAAD,CAAWC,OAAQjC,IACjCS,EAAQ,IACP,SAAC,IAAD,CACEA,MAAOA,EACPyB,gBAbc,SAAAR,GACtBtB,EAAgB,CAAEC,MAAOA,EAAOM,KAAMe,EAAES,SAAW,KACnDC,EAAAA,EAAAA,IACD,EAWSzB,KAAMA,IAITJ,IAAS,8EAIjB,C","sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 40px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  width: 100%;\n`;\n\nexport const SearchInput = styled.input`\n  min-width: 400px;\n  min-height: 40px;\n  padding: 0 5px;\n`;\n\nexport const SearchButton = styled.button`\n  margin-left: 20px;\n  padding: 5px 15px;\n  background-color: rgb(206, 206, 197);\n  border-radius: 3px;\n  border: rgb(206, 206, 197);\n  cursor: pointer;\n  height: 40px;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(172, 171, 165);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchForm, SearchInput, SearchButton } from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit, value }) => {\n  return (\n    <div>\n      <SearchForm onSubmit={onSubmit}>\n        <SearchInput\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          defaultValue={value}\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </SearchForm>\n    </div>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toast';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { fetchMoviesByQuery } from 'APIService/API';\nimport MovieList from 'components/MovieList/MovieList';\nimport Paginate from 'components/Pagination/Pagination';\nimport { topFunction } from 'Functions/Functions';\n\nconst Movies = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [error, setError] = useState(false);\n  const [total, setTotal] = useState(0);\n  const page = Number(searchParams.get('page') ?? 1);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    // setMoviesList([]);\n\n    async function addMoviesListByQuery() {\n      try {\n        const data = await fetchMoviesByQuery(query, page);\n        if (page > 1) {\n          setMoviesList(prevMoviesList => [...prevMoviesList, ...data.results]);\n        }\n        setMoviesList([...data.results]);\n        setTotal(Math.round(data.total_results / 20));\n        setSearchParams({ query: query, page: page });\n\n        if (data.results.length === 0) {\n          setError(true);\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    addMoviesListByQuery();\n  }, [query, page, setSearchParams]);\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    const searchForm = e.currentTarget.elements.query.value;\n    if (searchForm === '') {\n      toast.error('Please, enter your request');\n    }\n\n    setSearchParams(searchForm !== '' ? { query: searchForm, page: page } : '');\n    setMoviesList([]);\n  };\n\n  const handlePageClick = e => {\n    setSearchParams({ query: query, page: e.selected + 1 });\n    topFunction();\n  };\n\n  return (\n    <>\n      <div>\n        <Searchbar onSubmit={formSubmitHandler} value={query} />\n        {moviesList && <MovieList movies={moviesList} />}\n        {total > 1 && (\n          <Paginate\n            total={total}\n            handlePageClick={handlePageClick}\n            page={page}\n          />\n        )}\n\n        {error && <p>Sorry, we can't find anyting for your request.</p>}\n      </div>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["SearchForm","styled","SearchInput","SearchButton","Searchbar","onSubmit","value","name","type","autoComplete","autoFocus","placeholder","defaultValue","useState","moviesList","setMoviesList","useSearchParams","searchParams","setSearchParams","query","get","error","setError","total","setTotal","page","Number","useEffect","fetchMoviesByQuery","data","prevMoviesList","results","Math","round","total_results","length","console","log","message","addMoviesListByQuery","e","preventDefault","searchForm","currentTarget","elements","toast","MovieList","movies","handlePageClick","selected","topFunction"],"sourceRoot":""}