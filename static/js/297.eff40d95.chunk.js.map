{"version":3,"file":"static/js/297.eff40d95.chunk.js","mappings":"uRAEaA,EAAaC,EAAAA,GAAAA,KAAH,gLAUVC,EAAcD,EAAAA,GAAAA,MAAH,qFAMXE,EAAeF,EAAAA,GAAAA,OAAH,mR,SCdZG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,0BACE,UAACR,EAAD,CAAYK,SAVK,SAAAI,GACnBA,EAAMC,iBAENL,EAASE,GAETC,EAAS,GACV,EAIG,WACE,SAACN,EAAD,CACES,SAfkB,SAAAF,GACxBD,EAASC,EAAMG,cAAcC,MAC9B,EAcOA,MAAON,EACPO,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAACd,EAAD,CAAcW,KAAK,SAAnB,wBAIP,E,2BCmCD,EA5De,WAAO,IAAD,IACnB,GAAoCR,EAAAA,EAAAA,UAAS,IAA7C,eAAOY,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMf,EAAK,UAAGc,EAAaE,IAAI,gBAApB,QAAgC,GAC3C,GAA0BjB,EAAAA,EAAAA,WAAS,GAAnC,eAAOkB,EAAP,KAAcC,EAAd,KACA,GAA0BnB,EAAAA,EAAAA,UAAS,GAAnC,eAAOoB,EAAP,KAAcC,EAAd,KACMC,EAAOC,OAAM,UAACR,EAAaE,IAAI,eAAlB,QAA6B,IAEhDO,EAAAA,EAAAA,YAAU,WAAM,wCAMd,8GAEuBC,EAAAA,EAAAA,IAAmBxB,EAAOqB,GAFjD,OAEUI,EAFV,OAIIb,GAAc,SAAAc,GAAc,wBAAQA,IAAR,OAA2BD,EAAKE,SAAhC,IAC5BP,EAASQ,KAAKC,MAAMJ,EAAKK,cAAgB,KACzCf,EAAgB,CAAEf,MAAOA,EAAOqB,KAAMA,IAEV,IAAxBI,EAAKE,QAAQI,QACfb,GAAS,GATf,kDAYIc,QAAQC,IAAI,KAAMC,SAZtB,2DANc,sBACTlC,IAGLY,EAAc,IAJA,mCAqBduB,GACD,GAAE,CAACnC,EAAOqB,EAAMN,IAgBjB,OACE,+BACE,4BACE,SAAClB,EAAD,CAAWC,SAjBS,SAAAE,GACH,KAAjBA,EAAMoC,QACRC,EAAAA,EAAAA,MAAY,6BAEdtB,EACY,KAAVf,EAAe,CAAEA,MAAOA,EAAOqB,KAAMA,GAAS,CAAEA,KAAMA,IAExDT,EAAc,GACf,IAUMD,IAAc,SAAC2B,EAAA,EAAD,CAAWC,OAAQ5B,IACjCQ,EAAQ,IACP,SAAC,IAAD,CAAUA,MAAOA,EAAOqB,gBAVR,SAAAC,GACtB1B,EAAgB,CAAEf,MAAOA,EAAOqB,KAAMoB,EAAEC,SAAW,GACpD,IAWMzB,IAAS,8EAIjB,C","sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 40px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  width: 100%;\n`;\n\nexport const SearchInput = styled.input`\n  min-width: 400px;\n  min-height: 40px;\n  padding: 0 5px;\n`;\n\nexport const SearchButton = styled.button`\n  margin-left: 20px;\n  padding: 5px 15px;\n  background-color: rgb(206, 206, 197);\n  border-radius: 3px;\n  border: rgb(206, 206, 197);\n  cursor: pointer;\n  height: 40px;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(172, 171, 165);\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchForm, SearchInput, SearchButton } from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.currentTarget.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(query);\n\n    setQuery('');\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput\n          onChange={handleInputChange}\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </SearchForm>\n    </div>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toast';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { fetchMoviesByQuery } from 'APIService/API';\nimport MovieList from 'components/MovieList/MovieList';\nimport Paginate from 'components/Pagination/Pagination';\n\nconst Movies = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [error, setError] = useState(false);\n  const [total, setTotal] = useState(0);\n  const page = Number(searchParams.get('page') ?? 1);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setMoviesList([]);\n\n    async function addMoviesListByQuery() {\n      try {\n        const data = await fetchMoviesByQuery(query, page);\n\n        setMoviesList(prevMoviesList => [...prevMoviesList, ...data.results]);\n        setTotal(Math.round(data.total_results / 20));\n        setSearchParams({ query: query, page: page });\n\n        if (data.results.length === 0) {\n          setError(true);\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    addMoviesListByQuery();\n  }, [query, page, setSearchParams]);\n\n  const formSubmitHandler = query => {\n    if (query.trim() === '') {\n      toast.error('Please, enter your reques');\n    }\n    setSearchParams(\n      query !== '' ? { query: query, page: page } : { page: page }\n    );\n    setMoviesList([]);\n  };\n\n  const handlePageClick = e => {\n    setSearchParams({ query: query, page: e.selected + 1 });\n  };\n\n  return (\n    <>\n      <div>\n        <Searchbar onSubmit={formSubmitHandler} />\n        {moviesList && <MovieList movies={moviesList} />}\n        {total > 1 && (\n          <Paginate total={total} handlePageClick={handlePageClick} />\n        )}\n\n        {error && <p>Sorry, we can't find anyting for your request.</p>}\n      </div>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["SearchForm","styled","SearchInput","SearchButton","Searchbar","onSubmit","useState","query","setQuery","event","preventDefault","onChange","currentTarget","value","type","autoComplete","autoFocus","placeholder","moviesList","setMoviesList","useSearchParams","searchParams","setSearchParams","get","error","setError","total","setTotal","page","Number","useEffect","fetchMoviesByQuery","data","prevMoviesList","results","Math","round","total_results","length","console","log","message","addMoviesListByQuery","trim","toast","MovieList","movies","handlePageClick","e","selected"],"sourceRoot":""}