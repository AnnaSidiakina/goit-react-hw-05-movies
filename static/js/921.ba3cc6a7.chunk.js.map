{"version":3,"file":"static/js/921.ba3cc6a7.chunk.js","mappings":"8SAGaA,EAAgBC,EAAAA,GAAAA,IAAH,0CAIbC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mN,SCKvB,EATqB,WAAO,IAAD,IACnBG,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,WACE,SAACE,EAAD,CAAYI,GAAE,iBAAEF,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAzC,sBAGL,ECRYC,EAAeR,EAAAA,GAAAA,IAAH,2HAOZS,EAAWT,EAAAA,GAAAA,IAAH,oFAMRU,EAAiBV,EAAAA,GAAAA,IAAH,oEAKdW,EAAaX,EAAAA,GAAAA,GAAH,4CAIVY,EAAiBZ,EAAAA,GAAAA,GAAH,4CAIda,EAAUb,EAAAA,GAAAA,GAAH,6CAIPc,EAAcd,EAAAA,GAAAA,GAAH,6CAIXe,GAAcf,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAH,mVCoDxB,EAzEqB,WACnB,OAAkCiB,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFjB,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAkB,EAAAA,EAAAA,YAAU,WAAM,wCACd,wFACMF,EADN,2CAG4BG,EAAAA,EAAAA,IAAaH,GAHzC,cAGYI,EAHZ,OAKML,EAAaK,GALnB,kBAMaA,GANb,gCAQMC,QAAQC,IAAI,KAAMC,SARxB,0DADc,uBAAC,WAAD,wBAadC,EACD,GAAE,CAACR,KAGF,8BACGF,IACC,6BACE,SAAC,EAAD,KAEA,UAACV,EAAD,YACE,SAACC,EAAD,CACEoB,IACEX,EAAUY,YAAV,yCACsCZ,EAAUY,aAC5C,6EAENC,IAAKb,EAAUc,SAEjB,UAACtB,EAAD,YACE,UAACC,EAAD,WACGO,EAAUe,eADb,KAC+Bf,EAAUgB,aAAaC,MAAM,EAAG,GAD/D,QAIA,wCACeC,KAAKC,MAAOnB,EAAUoB,aAAe,GAAM,KAD1D,QAGA,SAAC1B,EAAD,wBACA,uBAAIM,EAAUqB,YACd,SAAC3B,EAAD,sBACA,uBAAIM,EAAUsB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAGvD,4BACE,SAAChC,EAAD,sCACA,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAaV,GAAG,OAAOC,MAAOH,EAASG,MAAvC,qBAIF,SAACQ,EAAD,WACE,SAACC,EAAD,CAAaV,GAAG,UAAUC,MAAOH,EAASG,MAA1C,wBAIF,SAAC,EAAAuC,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,gBAQf,C","sources":["components/GoBackButton/GoBackButton.styled.jsx","components/GoBackButton/GoBackButton.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonWrapper = styled.div`\n  padding: 30px;\n`;\n\nexport const GoBackLink = styled(Link)`\n  text-decoration: none;\n  padding: 5px 10px;\n  background-color: rgb(206, 206, 197);\n  border-radius: 3px;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(172, 171, 165);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { ButtonWrapper, GoBackLink } from './GoBackButton.styled';\n\nconst GoBackButton = () => {\n  const location = useLocation();\n\n  return (\n    <ButtonWrapper>\n      <GoBackLink to={location?.state?.from ?? '/'}>Go back</GoBackLink>\n    </ButtonWrapper>\n  );\n};\nexport default GoBackButton;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  border-bottom: 2px solid grey;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const MovieImg = styled.img`\n  object-fit: cover;\n  max-width: 300px;\n  height: auto;\n`;\n\nexport const MovieInfoBlock = styled.div`\n  text-align: left;\n  padding-left: 30px;\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 24px;\n`;\n\nexport const MovieInfoTitle = styled.h2`\n  font-size: 18px;\n`;\n\nexport const AddInfo = styled.ul`\n  list-style: none;\n`;\n\nexport const AddInfoItem = styled.li`\n  margin-top: 20px;\n`;\n\nexport const AddInfoLink = styled(NavLink)`\n  background-color: rgb(206, 206, 197);\n  width: 50px;\n  padding: 5px 15px;\n  border-radius: 3px;\n  margin: 0 auto 10px;\n  text-decoration: none;\n\n  &.active {\n    background-color: rgb(145, 182, 187);\n  }\n  &:hover:not(.active),\n  &:focus:not(.active) {\n    background-color: rgb(172, 171, 165);\n  }\n`;\n","import { getMovieByID } from '../../APIService/API';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport GoBackButton from 'components/GoBackButton/GoBackButton';\nimport {\n  MovieWrapper,\n  MovieInfoBlock,\n  MovieTitle,\n  MovieInfoTitle,\n  AddInfo,\n  AddInfoLink,\n  AddInfoItem,\n  MovieImg,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function addMovieInfo() {\n      if (movieId) {\n        try {\n          const results = await getMovieByID(movieId);\n          // console.log(results);\n          setMovieInfo(results);\n          return results;\n        } catch (error) {\n          console.log(error.message);\n        }\n      }\n    }\n    addMovieInfo();\n  }, [movieId]);\n\n  return (\n    <>\n      {movieInfo && (\n        <main>\n          <GoBackButton />\n\n          <MovieWrapper>\n            <MovieImg\n              src={\n                movieInfo.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`\n                  : 'https://cdn.pixabay.com/photo/2015/12/09/17/12/popcorn-1085072_960_720.jpg'\n              }\n              alt={movieInfo.title}\n            />\n            <MovieInfoBlock>\n              <MovieTitle>\n                {movieInfo.original_title} ({movieInfo.release_date.slice(0, 4)}\n                )\n              </MovieTitle>\n              <p>\n                User score: {Math.round((movieInfo.vote_average / 10) * 100)}%\n              </p>\n              <MovieInfoTitle>Overview</MovieInfoTitle>\n              <p>{movieInfo.overview}</p>\n              <MovieInfoTitle>Genres</MovieInfoTitle>\n              <p>{movieInfo.genres.map(genre => genre.name).join(', ')}</p>\n            </MovieInfoBlock>\n          </MovieWrapper>\n          <div>\n            <MovieInfoTitle>Additional information</MovieInfoTitle>\n            <AddInfo>\n              <AddInfoItem>\n                <AddInfoLink to=\"cast\" state={location.state}>\n                  Cast\n                </AddInfoLink>\n              </AddInfoItem>\n              <AddInfoItem>\n                <AddInfoLink to=\"reviews\" state={location.state}>\n                  Reviews\n                </AddInfoLink>\n              </AddInfoItem>\n              <Suspense fallback={<Loader />}>\n                <Outlet />\n              </Suspense>\n            </AddInfo>\n          </div>\n        </main>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["ButtonWrapper","styled","GoBackLink","Link","location","useLocation","to","state","from","MovieWrapper","MovieImg","MovieInfoBlock","MovieTitle","MovieInfoTitle","AddInfo","AddInfoItem","AddInfoLink","NavLink","useState","movieInfo","setMovieInfo","movieId","useParams","useEffect","getMovieByID","results","console","log","message","addMovieInfo","src","poster_path","alt","title","original_title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","join","Suspense","fallback","Loader"],"sourceRoot":""}